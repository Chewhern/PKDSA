<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>Light green refers to the action
is solely done by the users/clients.

Red refers to the action that is
done by both the users and
provider. However, it's incredibly
easy to mess up on both side in their 
own ways.

Green refers to the action is done
by both the users and provider.
However, it's easy to mess up
on user side. 

After you configure the software
to use TOR and you also have the
correct IP address of the provider's
server, you may realize that the 
application GUI is not functioning.

In such a case, kindly waits for the
TOR to load up and after the load
up, every server related operation
requested by you, you'll need to
wait for some time to get back
the response and you'll see similar
response to the one as stated in 
this Menu form.</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Another thing that's important
is that you can only do either
one of the listed
combination.

"Server's IP address config"
-&gt;"Download and start
TOR deepweb" or
"Download and start TOR
deepweb" -&gt; "Server's
IP address configuration"

The first combination, you
risk your IP address being
exposed to the provider
but then later protected by
TOR deepweb.

The 2nd combination, you
risk your IP address being
exposed to the TOR 
provider but then later
TOR and provider couldn't
really know your real IP
address.

This IP address logging
risks is something you'll
have to figure out by your own.</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>This application by default
is immune to common
keylogger attacks but
it's prone to clipboard
data based attacks. 

This application by default
is considered to be memory
safe on client side. As it
immediately wipes 
cryptographically 
sensitive data immediately
after use. This is due to
it uses mutable data 
in major parts of its
operations.

Common cryptographical
key storage on devices
typically uses immutable
data type and the most
common and accessible
example is signed
certificate from CA
(Certificate Authority).

The certificate also has its
own private key. In these
2 paired examples, they
are using immutable data
types aka String or visible
text within file. </value>
  </data>
</root>